- Class: meta
  Course: Programowanie w R
  Lesson: Środowisko i pliki
  Author: David Kane, Dariusz Brzeziński
  Type: Standard
  Organization: Williams College, Poznan University of Technology
  Version: 1.0.1

- Class: text
  Output: "W ramach tej lekcji dowiesz się jak poruszać się po środowisku 
    uruchomieniowym R i poznasz jego powiązanie z systemem plików na komputerze."

- Class: text
  Output: "Ponieważ różne systemy operacyjne mają różne podejścia do takich rzeczy
    jak ścieżki do plików, wyniki komend wykonywanych w ramach tej lekcji mogą
    się różnić w zależności od systemu operacyjnego."

- Class: text
  Output: Niemniej jednak R dostarcza wspólnego interfejsu do pracy z plikami i dzięki
    temu, komendy ktore poznacie w ramach tej lekcji będa działały na wszystkich
    systemach operacyjnych.

- Class: text
  Output: Zacznijmy od podstawowych komend!

- Class: cmd_question
  Output: Za pomocą komendy getwd() określ bieżącą ścieżkę do katalogu roboczego tej sesji R.
  CorrectAnswer: getwd()
  AnswerTests: omnitest(correctExpr='getwd()')
  Hint: Wpisz getwd(), aby okreslić scieżkę katalogu roboczego.

- Class: cmd_question
  Output: Wypisz wszystkie obiekty w bieżącym środowisku za pomocą ls().
  CorrectAnswer: ls()
  AnswerTests: omnitest(correctExpr='ls()')
  Hint: Wpisz ls(), aby zaobaczyć wszystkie obiekty w środowisku roboczym.

- Class: text
  Output: Niektóre komendy w R są takie same jak ich odpowiedniki na systemach Unix.
    Ci co pamiętają komendy Unixowe są trochę do przodu ;)

- Class: cmd_question
  Output: Przypisz numer na koszulce Michaela Jordana do zmiennej mj.
  CorrectAnswer: mj <- 9
  AnswerTests: omnitest(correctExpr='mj <- 23')
  Hint: Wpisz mj <- 23, aby przypisać 23 to mj.

- Class: cmd_question
  Output: Obejrzyj teraz obiekty dostępne w środowisku roboczym za pomocą ls().
  CorrectAnswer: ls()
  AnswerTests: omnitest(correctExpr='ls()')
  Hint: Wpisz ls(), aby zaobaczyć obiekty w środowisku roboczym..

- Class: cmd_question
  Output: Wypisz wszystkie pliki znajdujące się w aktualnym katalogu roboczym
    za pomocą komendy list.files() lub dir().
  CorrectAnswer: list.files()
  AnswerTests: any_of_exprs('list.files()', 'dir()')
  Hint: Wpisz list.files(), aby przejrzeć listę plików w katalogu roboczym.

- Class: cmd_question
  Output: W trakcie tej lekcji (jak i nastepnych) warto zaglądać do plików 
    pomocy kazdej nowo poznanej funkcji. Sprawdź plik pomocy dla funkcji
    list.files za pomocą komendy ?list.files.
  CorrectAnswer: ?list.files
  AnswerTests: any_of_exprs('?list.files', '?dir', 'help("list.files")', 'help("dir")')
  Hint: Wpisz ?list.files, aby zobaczyc plik pomocy.

- Class: text
  Output: Jedną z najprzydatniejszych części każdego pliku pomocy w R jest sekcja
    See also. Przeczytaj tę sekcję dla funkcji list.files. Niektóre z wypisanych
    tam funkcji zostaną wykorzystane w dalszej części lekcji.

- Class: text
  Output: Wywołując funkcję args() na nazwie dowolnej funkcji można w łatwy 
    sposób sprawdzić jakie argumenty przyjmuje.


- Class: cmd_question
  Output: Skorzystaj z funkcji args(), aby określić argumenty list.files().
  CorrectAnswer: args(list.files)
  AnswerTests: omnitest(correctExpr='args(list.files)')
  Hint: Wpisz args(list.files), aby zobacyzć argumenty list.files.


- Class: cmd_question
  Output: Przypisz ścieżkę aktualnego katalogu roboczego do zmiennej "old.dir".
  CorrectAnswer: old.dir <- getwd()
  AnswerTests: omnitest(correctExpr='old.dir <- getwd()')
  Hint: Wpisz old.dir <- getwd(), aby przypisać ścieżkę aktualnego katalogu 
    roboczego zmiennej "old.dir".

- Class: text
  Output: Wykorzystamy old.dir pod koniec lekcji, aby wrócić do miejsca z którego
    zaczęliśmy.

- Class: cmd_question
  Output: Użyj polecenia dir.create() aby stworzyć folder "testdir" w bieżacym katalogu.
  CorrectAnswer: dir.create("testdir")
  AnswerTests: omnitest(correctExpr='dir.create("testdir")')
  Hint: Wpisz dir.create("testdir") aby stworzyć folder "testdir" w bieżącym katalogu roboczym.

- Class: text
  Output: Pozostałe ćwiczenia wykonamy w tym katalogu a potem go usuniemy.

- Class: cmd_question
  Output: Ustaw katalog roboczy na "testdir" za pomocą polecenia setwd(). P.S. RStudio 
    próbuje podpowiadać ścieżki do plików --- wpisz ciapki a następnie Ctrl+Spację.
  CorrectAnswer: setwd("testdir")
  AnswerTests: any_of_exprs('setwd("testdir")', 'setwd("testdir/")')
  Hint: Użyj setwd("testdir") , aby ustawić "testdir" jako katalog roboczy.

- Class: text
  Output: Z reguły jako katalog roboczy ustawia się jakiś katalog związany z
    aktualnie wykonywanym projektem. W RStudio katalog roboczy projektu czy
    pakietu jest ustawiany na folder gdzie znajduje się plik .rproj.

- Class: cmd_question
  Output: Stwórz plik "mytest.R" za pomoca funkcji file.create().
  CorrectAnswer: file.create("mytest.R")
  AnswerTests: omnitest(correctExpr='file.create("mytest.R")')
  Hint: file.create("mytest.R") załatwi sprawę. Pamiętaj, aby w razie wątpliwości
    zawsze zaglądać do pomocy, np. ?file.create.

- Class: cmd_question
  Output: "Powienien to być jedyny plik w nowym folderze. Sprawdźmy to wypisując
    wszystkie pliki w bieżącym katalogu."
  CorrectAnswer: list.files()
  AnswerTests: any_of_exprs('list.files()', 'dir()')
  Hint: list.files() powinno pokazać pliki w bieżącym folderze.

- Class: cmd_question
  Output: Sprawdź czy plik "mytest.R" istnieje w katalogu roboczym za pomocą funkcji
    file.exists().
  CorrectAnswer: file.exists("mytest.R")
  AnswerTests: omnitest(correctExpr='file.exists("mytest.R")')
  Hint: Wpisz file.exists("mytest.R"), aby sprawdzić czy plik wystepuje.

- Class: text
  Output: Funkcje typu file.exists() wydają się mało interesujące przy korzystaniu z R
    interaktywnie w konsoli, ale w skryptach, w pętlach, w automatycznych raportach
    mogą okazać się bardzo przydatne.

- Class: cmd_question
  Output: Sprawdź informacje o pliku "mytest.R" za pomocą file.info().
  CorrectAnswer: file.info("mytest.R")
  AnswerTests: omnitest(correctExpr='file.info("mytest.R")')
  Hint: file.info("mytest.R") ;)

- Class: text
  Output: Możesz wykorzystać operator $ --- np. file.info("mytest.R")$mode --- 
    aby wyciągnąć konkretny fragment zestawienia.

- Class: cmd_question
  Output: Zmień nazwę pliku "mytest.R" na "mytest2.R" wykorzystując do tego 
    file.rename().
  CorrectAnswer: file.rename("mytest.R", "mytest2.R")
  AnswerTests: any_of_exprs('file.rename("mytest.R", "mytest2.R")', 'file.rename(from = "mytest.R", to = "mytest2.R")')
  Hint: file.rename("mytest.R", "mytest2.R") to poprawna odpowiedź. W razie czego, 
    oprócz plików pomocy, jest też zawsze Google, StackOverflow i takie tam.
    Polecam Żanet Kaleta.

- Class: text
  Output: "Mógłbyś teraz spróbować usunąć plik mytest.R za pomocą 
    file.remove('mytest.R'), ale to nie zadziała --- już nie istnieje, bo zmieniliśmy
    jego nazwę."

- Class: cmd_question
  Output: Zrób kopię "mytest2.R" o nazwie "mytest3.R" za pomocą file.copy().
  CorrectAnswer: file.copy("mytest2.R", "mytest3.R")
  AnswerTests: any_of_exprs('file.copy("mytest2.R", "mytest3.R")', 'file.copy(from = "mytest2.R", to = "mytest3.R")')
  Hint: file.copy("mytest2.R", "mytest3.R")...

- Class: cmd_question
  Output: Sprawdź ścieżkę względną do "mytest3.R" za pomocą file.path().
  CorrectAnswer: file.path("mytest3.R")
  AnswerTests: omnitest(correctExpr='file.path("mytest3.R")')
  Hint: file.path("mytest3.R") powinno zadziałać.

- Class: cmd_question
  Output: "Możesz wykorzystać file.path do tworzenia ścieżek (niezależnych od 
    systemu operacyjnego na którym działa R). Przekaż 'folder1' i 'folder2' jako
    argumenty file.path, by stworzyć taką ścieżkę."
  CorrectAnswer: file.path("folder1", "folder2")
  AnswerTests: omnitest(correctExpr='file.path("folder1", "folder2")')
  Hint: file.path("folder1", "folder2") zadziała.

- Class: cmd_question
  Output: "Przejrzyj dokumentację polecenia dir.create. Zwróć uwagę na parametr
    'recursive'. Aby stworzyć zagnieżdżone foldery 'recursive' musi byc ustawione 
    na TRUE."
  CorrectAnswer: ?dir.create
  AnswerTests: omnitest(correctExpr='?dir.create')
  Hint: ?dir.create pokaże dokumentację.

- Class: cmd_question
  Output: W bieżącym katalogu roboczym stwórz folder "testdir2" i podfolder
    "testdir3", wszystko w jednym poleceniu wykorzystującym dir.create() i file.path().
  CorrectAnswer: dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
  AnswerTests: omnitest(correctExpr='dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)')
  Hint: "dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE) 
    powinno załatwić sprawę. Jeśli zapomniałeś ustawić recursive, polecenie mogło
    sprawić wrażenie jakby zadziałało, ale nie stworzyło podfolderu."

- Class: text
  Output:  "Aby usunąć katalog musisz ustawić recursive = TRUE w
    funkcji unlink(). Podobnie jak w systemach Unixowych, jeśli nie ustawisz recursive na TRUE,
    R pomyśli, że nie jesteś świadomy tego, że usuwasz folder wraz z zawartością. 
    R zakłada, że jeśli nie podałeś argumentu recursive równego TRUE, nie wiesz
    że coś znajduje się w usuwanym folderze i R próbuje uchronić Cię przed pomyłką."

- Class: cmd_question
  Output: Usuń folder "testdir2" za pomocą unlink().
  CorrectAnswer: unlink("testdir2", recursive = TRUE)
  AnswerTests: omnitest(correctExpr='unlink("testdir2", recursive = TRUE)')
  Hint: Spróbuj unlink("testdir2", recursive = TRUE).

- Class: text
  Output: Dlaczego "unlink" zamiast czegoś bardziej przewidywalnego jak 
    "dir.delete" albo "dir.remove"? Głównie ze względu na historię. 
    unlink to tradycyjne polecenie Unixowe do usuwania folderów.

- Class: cmd_question
  Output: Wróć do pierwotnego katalogu roboczego za pomocą funkcji
    setwd(). (Stworzyłeś zmienną old.dir, żeby ułatwić sobie to zadanie)
  CorrectAnswer: setwd(old.dir)
  AnswerTests: omnitest(correctExpr='setwd(old.dir)')
  Hint: Wpisz setwd(old.dir).

- Class: cmd_question
  Output: "Usuń folder 'testdir', który właśnie opuściłeś, wraz z całą jego zawartością"
  CorrectAnswer: unlink("testdir", recursive = TRUE)
  AnswerTests: omnitest(correctExpr='unlink("testdir", recursive = TRUE)')
  Hint: Wpisz unlink("testdir", recursive = TRUE).

- Class: text
  Output: I w ten sposób zatarliśmy po sobie ślady...

- Class: text
  Output: "W ramach tej lekcji poznałeś podstawowe funkcje pozwalające poruszać
    się środowisku roboczym i systemie plików w ramach R."
